@model BookStore.DO.Entities.Book
<div class="container-fluid book ">
    <div class="row itemb">
        <div class="col-md-10 col-lg-10 ">
            <p class="title">@Model.Title</p>
            @Html.HiddenFor(x => x.Book_ID, new { id = "thisBookId" })
            @foreach (var author in Model.BookAuthors)
            {
                <p class="author">@author.First_Name @author.Middle_Name @author.Last_Name</p>
            }
            @foreach (var genre in Model.Genres)
            {
                <p class="genre">@genre.Genre_Name</p>
            }
            <p class="annotation">@Model.Annotation</p>
            <p class="glyphicon glyphicon-star rate" aria-hidden="true">@Model.Rating</p>
            <p class="price">@Model.Price.ToString("c")</p>
            <p class="genre">Теги:</p>
            <div class="tags">
                @foreach (var tag in @Model.Tages)
                {
                    @Html.ActionLink(tag.Tag_Name, "ListByTag", "Book", new { tagID = tag.Tag_ID }, null)
                }
            </div>
            @{
                if (Session["UserId"] != null)
                {
                    Html.RenderAction("BookRating", "Book", new { bookId = @Model.Book_ID });
                }
            }
            @*<input id="input-id" bookid="@Model.Book_ID"
                type="number" class="rating" star=10 size="sm" min=0 max=10 step=1 data-size="sm" data-rtl="false">*@
            <div class="comments">
                <div class="detailBox">
                    <div class="actionBox">
                        <ul class="commentList">
                            @foreach (var comment in @Model.Comments)
                            {
                                <li>
                                    <div class="commenterImage">
                                       
                                        <a href="@Url.RouteUrl(new{action="Profile", controller="User",user=Session["UserName"]})">
                                            <img src="@Url.Content(Session["UserImage"].ToString())"/>
                                        </a>
                                    </div>
                                    <div class="commentText">
                                        <p class="">@comment.Context</p> <span class="date sub-text">@comment.DataCreate</span>
                                    </div>
                                </li>
                            }
                        </ul>
                        @*<div class="form-group">
                                <textarea class="form-control" rows="4" placeholder="Your comments" id="areaCommment"></textarea>
                            </div>*@
                        <div class="form-group form-input">
                            @*<button class="btn btn-default" id="addComment"
                                onclick="return addComment(@Model.Book_ID,@Session["UserId"])">Add</button>*@
                            @{
                                if (Session["UserId"] != null)
                                {
                                    Html.RenderAction("AddComment", "Book", new { bookId=@Model.Book_ID});
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-lg-2 image">
            @if (Model.Image_url != null)
            {
                <img src="@Url.Content(Model.Image_url)" class="img-thumbnail" alt="images" />
            }
            else
            {
                <img src="@Url.Content("~/Content/Images/imgBook0.jpg")" class="img-thumbnail" alt="images" />
            }
        </div>
    </div>
</div>
